Partition the workload.
Design for scaling.
Scale as a unit.
Avoid client affinity.
Offload intensive CPU/IO tasks as background tasks.
Distribute the workload for background tasks.
Consider moving towards a shared-nothing architecture.
Aggressively use caching.
Enable client side caching.
Optimize and tune SQL queries and indexes.
Consider de-normalizing data.
Avoid locking resources, and use an optimistic approach instead.
Compress highly compressible data over high latency, low bandwidth networks.
Send requests in batches to optimize network use.
Carry out performance profiling and load testing during development.
